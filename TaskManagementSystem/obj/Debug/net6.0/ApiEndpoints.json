[
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.DepartmentsController",
    "Method": "All",
    "RelativePath": "api/Departments/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentResponseModel.GetDepartmentResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.DepartmentsController",
    "Method": "Create",
    "RelativePath": "api/Departments/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentRequestModel.CreateDepartmentRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentResponseModel.CreateDepartmentResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.DepartmentsController",
    "Method": "Delete",
    "RelativePath": "api/Departments/Delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentRequestModel.GetDepartmentIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentResponseModel.DeleteDepartmentResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.DepartmentsController",
    "Method": "Detail",
    "RelativePath": "api/Departments/Detail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentRequestModel.GetDepartmentIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentResponseModel.GetDepartmentResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.DepartmentsController",
    "Method": "Update",
    "RelativePath": "api/Departments/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentRequestModel.UpdateDepartmentRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.DepartmentDTOs.DepartmentResponseModel.UpdateDepartmentResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.ToDoTaskController",
    "Method": "All",
    "RelativePath": "api/ToDoTask/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskResponseModel.GetToDoTaskResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.ToDoTaskController",
    "Method": "Create",
    "RelativePath": "api/ToDoTask/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskRequestModel.CreateToDoTaskRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskResponseModel.CreateToDoTaskResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.ToDoTaskController",
    "Method": "Delete",
    "RelativePath": "api/ToDoTask/Delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskRequestModel.GetToDoTaskIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.ToDoTaskController",
    "Method": "Detail",
    "RelativePath": "api/ToDoTask/Detail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskRequestModel.GetToDoTaskIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskResponseModel.GetToDoTaskResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.ToDoTaskController",
    "Method": "Update",
    "RelativePath": "api/ToDoTask/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskRequestModel.UpdateToDoTaskRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.ToDoTaskDTOs.ToDoTaskResponseModel.UpdateToDoTaskResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "All",
    "RelativePath": "api/Users/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserResponseModel.GetUserResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "Create",
    "RelativePath": "api/Users/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserRequestModel.CreateUserRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserResponseModel.CreateUserResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "CurrentUser",
    "RelativePath": "api/Users/CurrentUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "Delete",
    "RelativePath": "api/Users/Delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserRequestModel.GetUserIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "Detail",
    "RelativePath": "api/Users/Detail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserRequestModel.GetUserIdRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserResponseModel.GetUserResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "Login",
    "RelativePath": "api/Users/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserRequestModel.LoginUserRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskManagementSystem.API.Controllers.UsersController",
    "Method": "Update",
    "RelativePath": "api/Users/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserRequestModel.UpdateUserRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskManagementSystem.Infrastructure.DTOs.UserDTOs.UserResponseModel.UpdateUserResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]